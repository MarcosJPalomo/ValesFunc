@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .custom-dropdown {
        position: relative;
    }

    .dropdown-list {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #ced4da;
        border-top: none;
        border-radius: 0 0 0.375rem 0.375rem;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1000;
        display: none;
    }

    .dropdown-item-custom {
        padding: 8px 12px;
        cursor: pointer;
        border-bottom: 1px solid #f8f9fa;
    }

        .dropdown-item-custom:hover {
            background-color: #f8f9fa;
        }

        .dropdown-item-custom:last-child {
            border-bottom: none;
        }

        .dropdown-item-custom.selected {
            background-color: #0d6efd;
            color: white;
        }
</style>

<h2 style="text-align:center;">Crear vale nuevo</h2>
<hr />
<br />
<div id="Body"></div>

<div class="row">
    <div class="col-3">
        <div class="row">
            <div class="col-auto d-flex align-items-center">
                <label class="form-label">C. C:</label>
            </div>
            <div class="col">
                <div class="custom-dropdown">
                    <input class="form-control" id="txtCc" placeholder="Buscar centro de costo..." autocomplete="off" />
                    <div id="costCentersDropdown" class="dropdown-list"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col"> </div>
    <div class="col-4">
        <div class="row">
            <div class="col-auto d-flex align-items-center">
                <label class="form-label">Grupo de líneas:</label>
            </div>
            <div class="col">
                <select id="cmbGroupLine" asp-items="@ViewBag.GroupSupplyLines" class="form-control" onchange="FillCmbSupplyLine()">
                </select>
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="row">
            <div class="col-auto d-flex align-items-center">
                <label class="form-label">Líneas de artículos:</label>
            </div>
            <div class="col">
                <select id="cmbSupplyLine" class="form-control" onchange="SupplyList(1)">
                    <option value="0">-- Seleccionar línea --</option>
                </select>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.VoucherType == 1)
{
    <br />
    <div class="form-check">
        <input class="form-check-input" type="checkbox" id="chbxSurplus" onchange="Surplus()">
        <label class="form-check-label">
            Sobrante
        </label>
    </div>
}
<br />
<div class="input-group mb-3">
    <div class="custom-dropdown" style="flex: 1;">
        <input class="form-control" id="txtSupply" placeholder="Buscar por nombre o código..." autocomplete="off">
        <div id="suppliesDropdown" class="dropdown-list"></div>
    </div>
    <button class="btn btn-outline-success" type="button" id="button-addon2" onclick="AddRow()"><i class="bi bi-plus-lg"></i> Agregar</button>
</div>
<div id="msg" style="color:#cb4335; font-size:12px; font-style:italic;"></div>

<br />
<table class="table table-primary text-center table-sm align-middle" id="table">
    <thead>
        <tr>
            <th scope="col">Eliminar</th>
            <th scope="col">Descripción del artículo</th>
            <th scope="col">Tipo de unidad</th>
            <th scope="col">Cantidad</th>
            <th scope="col">Existencia</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">
    </tbody>
</table>
<br />
<div class="form-check">
    <input class="form-check-input" type="checkbox" data-bs-toggle="collapse" href="#collapseEmpNumber" id="chbxPickedUp" checked>
    <label class="form-check-label" for="flexCheckDefault">
        Recibirá otra persona
    </label>
</div>
<div class="collapse show" id="collapseEmpNumber">
    <div class="row">
        <div class="col-auto d-flex align-items-center">
            <label class="form-label">Recibirá:</label>
        </div>
        <div class="input-group">
            <button class="btn btn-outline-info" type="button" onclick="GetNameWorker()"><i class="bi bi-search"></i></button>
            <input type="text" class="form-control" id="txtEmpNumber" placeholder="Ingresar número de ficha">
            <input type="text" class="form-control" id="txtName" placeholder="Nombre del trabajador" readonly>
            <button class="btn btn-outline-danger" type="button" onclick="ClearName()"><i class="bi bi-x-lg"></i></button>
        </div>
    </div>
</div>
<br />
<div class="gap-2 d-md-flex justify-content-md-end">
    <a class="btn btn-secondary" style="width: 200px; margin-right: auto;" asp-action="Index" asp-controller="Voucher">Cancelar</a>
    <a class="btn btn-primary" id="btnCreate" style="width: 200px;" onclick="Create()">Aceptar</a>
</div>

<script>
    // Variables globales
    window.suppliesData = [];
    window.filteredSuppliesData = [];
    window.selectedSupplyIndex = -1;

    // Variables para centros de costo
    window.costCentersData = [];
    window.filteredCostCentersData = [];
    window.selectedCostCenterIndex = -1;

    window.onload = function () {
        CostCenterList();
        SupplyList(1);
    };

    function Surplus(){
        if (document.getElementById('chbxSurplus').checked){
            $('#table tbody').empty();
            $('#cmbGroupLine').prop('disabled', true);
            $('#cmbSupplyLine').prop('disabled', true);
            SupplyList(0);
        } else {
            $('#table tbody').empty();
            $('#cmbGroupLine').prop('disabled', false);
            $('#cmbSupplyLine').prop('disabled', false);
            SupplyList(1);
        }
    }

    function FillCmbSupplyLine() {
        var cmbGroupLine = document.getElementById("cmbGroupLine");
        var groupLine = cmbGroupLine.options[cmbGroupLine.selectedIndex].value;
        var voucherType = @ViewBag.voucherType;
        $.ajax({
            url: '/Stock/ListSupplyLine',
            data: { idGroupSupplyLine: groupLine, rawMaterial: voucherType },
            method: "GET",
            success: function (result) {
                $("#cmbSupplyLine").empty();
                var s = '<option value="0" selected>-- Seleccionar línea --</option>';
                for (var i = 0; i < result.length; i++) {
                    s += '<option value="' + result[i].idSupplyLine + '">' + result[i].name + '</option>';
                }
                $("#cmbSupplyLine").append(s);
                SupplyList(1);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Status: " + textStatus); alert("Error: " + errorThrown);
                console.log(error);
            }
        });
    }

    function CostCenterList() {
        $.ajax({
            url: '/CostCenter/CostCenterList',
            method: 'get',
            success: function (data) {
                window.costCentersData = [];
                for (var i = 0; i < data.length; i++) {
                    var escapedDescription = data[i].description.replace(/'/g, '&#39;').replace(/"/g, '&#34;');
                    window.costCentersData.push({
                        id: data[i].idCostCenter,
                        description: escapedDescription,
                        displayValue: escapedDescription
                    });
                }
                document.getElementById("costCentersDropdown").innerHTML = '';
                document.getElementById("costCentersDropdown").style.display = 'none';
                window.filteredCostCentersData = [];
                window.selectedCostCenterIndex = -1;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Status: " + textStatus);
                console.log("Error: " + errorThrown);
            }
        });
    }

    function filterCostCenters(searchTerm) {
        var dropdown = document.getElementById("costCentersDropdown");
        window.filteredCostCentersData = window.costCentersData.filter(function(item) {
            return item.displayValue.toLowerCase().includes(searchTerm.toLowerCase());
        });

        if (window.filteredCostCentersData.length > 0 && searchTerm.length > 0) {
            var html = '';
            window.filteredCostCentersData.forEach(function(item, index) {
                html += '<div class="dropdown-item-custom" data-index="' + index + '" onclick="selectCostCenter(' + index + ')">' +
                        item.displayValue + '</div>';
            });
            dropdown.innerHTML = html;
            dropdown.style.display = 'block';
        } else {
            dropdown.style.display = 'none';
        }
        window.selectedCostCenterIndex = -1;
    }

    function selectCostCenter(index) {
        if (window.filteredCostCentersData && window.filteredCostCentersData[index]) {
            var selectedItem = window.filteredCostCentersData[index];
            document.getElementById("txtCc").value = selectedItem.displayValue;
            document.getElementById("costCentersDropdown").style.display = 'none';
            window.selectedCostCenterIndex = index;
        }
    }

    function navigateCostCenterDropdown(direction) {
        var dropdown = document.getElementById("costCentersDropdown");
        var items = dropdown.querySelectorAll('.dropdown-item-custom');

        if (items.length === 0) return;

        items.forEach(function(item) {
            item.classList.remove('selected');
        });

        if (direction === 'down') {
            window.selectedCostCenterIndex = Math.min(window.selectedCostCenterIndex + 1, items.length - 1);
        } else if (direction === 'up') {
            window.selectedCostCenterIndex = Math.max(window.selectedCostCenterIndex - 1, -1);
        }

        if (window.selectedCostCenterIndex >= 0) {
            items[window.selectedCostCenterIndex].classList.add('selected');
            items[window.selectedCostCenterIndex].scrollIntoView({ block: 'nearest' });
        }
    }

    function SupplyList(flag) {
        var cmbGroupLine = document.getElementById("cmbGroupLine");
        var cmbSupplyLine = document.getElementById("cmbSupplyLine");
        var groupLine = cmbGroupLine.options[cmbGroupLine.selectedIndex].value;
        var supplyLine = cmbSupplyLine.options[cmbSupplyLine.selectedIndex].value;
        var voucherType = @ViewBag.voucherType;
        var url = '';
        var data = new Object();
        if (flag == 1) {
            url = '/Stock/ListSupply';
            data.idGroupSupplyLine = groupLine;
            data.idSupplyLine = supplyLine;
            data.rawMaterial = voucherType;
        } else {
            url = '/Stock/ListSupplySurplus';
        }
        $.ajax({
            url: url,
            data: data,
            method: 'get',
            success: function (data) {
                window.suppliesData = [];
                for (var i = 0; i < data.length; i++) {
                    var escapedDescription = data[i].description.replace(/'/g, '&#39;').replace(/"/g, '&#34;');
                    var escapedMicrosipkey = data[i].microsipkey ? data[i].microsipkey.replace(/'/g, '&#39;').replace(/"/g, '&#34;') : '';

                    window.suppliesData.push({
                        id: data[i].idSupply,
                        description: escapedDescription,
                        microsipkey: escapedMicrosipkey,
                        displayValue: (escapedMicrosipkey ? escapedMicrosipkey + ' - ' : '') + escapedDescription,
                        qtyTotal: data[i].qtyTotal,
                        unitType: data[i].unitType,
                        idSupplySurplus: data[i].idSupplySurplus
                    });
                }
                document.getElementById("suppliesDropdown").innerHTML = '';
                document.getElementById("suppliesDropdown").style.display = 'none';
                window.filteredSuppliesData = [];
                window.selectedSupplyIndex = -1;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Status: " + textStatus);
                console.log("Error: " + errorThrown);
            }
        });
    }

    function filterSupplies(searchTerm) {
        var dropdown = document.getElementById("suppliesDropdown");
        window.filteredSuppliesData = window.suppliesData.filter(function(item) {
            return item.displayValue.toLowerCase().includes(searchTerm.toLowerCase());
        });

        if (window.filteredSuppliesData.length > 0 && searchTerm.length > 0) {
            var html = '';
            window.filteredSuppliesData.forEach(function(item, index) {
                html += '<div class="dropdown-item-custom" data-index="' + index + '" onclick="selectSupply(' + index + ')">' +
                        item.displayValue + '</div>';
            });
            dropdown.innerHTML = html;
            dropdown.style.display = 'block';
        } else {
            dropdown.style.display = 'none';
        }
        window.selectedSupplyIndex = -1;
    }

    function selectSupply(index) {
        if (window.filteredSuppliesData && window.filteredSuppliesData[index]) {
            var selectedItem = window.filteredSuppliesData[index];
            document.getElementById("txtSupply").value = selectedItem.displayValue;
            document.getElementById("suppliesDropdown").style.display = 'none';
            window.selectedSupplyIndex = index;
        }
    }

    function navigateDropdown(direction) {
        var dropdown = document.getElementById("suppliesDropdown");
        var items = dropdown.querySelectorAll('.dropdown-item-custom');

        if (items.length === 0) return;

        items.forEach(function(item) {
            item.classList.remove('selected');
        });

        if (direction === 'down') {
            window.selectedSupplyIndex = Math.min(window.selectedSupplyIndex + 1, items.length - 1);
        } else if (direction === 'up') {
            window.selectedSupplyIndex = Math.max(window.selectedSupplyIndex - 1, -1);
        }

        if (window.selectedSupplyIndex >= 0) {
            items[window.selectedSupplyIndex].classList.add('selected');
            items[window.selectedSupplyIndex].scrollIntoView({ block: 'nearest' });
        }
    }

    function AddRow() {
        var inputElement = document.getElementById('txtSupply');
        var selectedValue = inputElement.value;

        var selectedItem = null;

        if (window.selectedSupplyIndex >= 0 && window.filteredSuppliesData && window.filteredSuppliesData.length > 0) {
            selectedItem = window.filteredSuppliesData[window.selectedSupplyIndex];
        } else {
            selectedItem = window.suppliesData.find(function(item) {
                return item.displayValue.trim().toLowerCase() === selectedValue.trim().toLowerCase();
            });
        }

        if (!selectedItem) {
            inputElement.value = null;
            document.getElementById("msg").innerHTML = '*Este artículo no existe, favor de seleccionar uno de los que se muestran en la lista';
            document.getElementById("suppliesDropdown").style.display = 'none';
        } else {
            var dataValue = selectedItem.id;
            var dataMax = selectedItem.qtyTotal;
            var dataUnit = selectedItem.unitType;
            var dataSurplus = selectedItem.idSupplySurplus;
            var productDescription = selectedItem.description;

            var alreadyExists = false;
            $('#table tbody tr').each(function () {
                var existingRowId = $(this).attr('id');
                if (existingRowId === 'row' + dataValue) {
                    alreadyExists = true;
                }
            });

            if (alreadyExists) {
                inputElement.value = null;
                document.getElementById("msg").innerHTML = '*Este artículo ya está agregado';
                document.getElementById("suppliesDropdown").style.display = 'none';
            } else {
                var newRow = '<tr id="row' + dataValue + '"><td> <a class="btn" onclick="RemoveRow(' + dataValue + ')"> <i class="bi bi-x-square" style="font-size: 24px; color:#ca1f1f; border-color: transparent;"></i></a>' +
                    '</td><td>' + productDescription + '</td>' + '<td>' + dataUnit + '</td><td><input class="form-control" type="number" min="1" max="' + dataMax + '" name="txtQty" step="0.001" data-id="' + dataValue +
                    '" data-surplus="' + dataSurplus + '" value="1" /></td>' +
                    '<td>'+ dataMax +'</td></tr>';
                $('#table tbody').append(newRow);
                inputElement.value = null;
                document.getElementById("msg").innerHTML = '';
                document.getElementById("suppliesDropdown").style.display = 'none';
                window.selectedSupplyIndex = -1;
            }
        }
    }

    function RemoveRow(idSupply) {
        $('#row' + idSupply).remove();
    }

    function Create() {
        var qtyInputs = document.getElementsByName('txtQty');
        var data = [];
        var hasError = false;
        if(qtyInputs.length <= 0){
            document.getElementById("msg").innerHTML = '*No se puede crear el vale sin al menos un insumo';
            return;
        }
        for (var i = 0; i < qtyInputs.length; i++) {
            var qtyValue = qtyInputs[i].value;
            var dataMax = qtyInputs[i].getAttribute('max');
            if (parseFloat(qtyValue) > parseFloat(dataMax)) {
                hasError = true;
                alert('La cantidad para el artículo es mayor que el máximo permitido (' + dataMax + ').');
                qtyInputs[i].focus();
                break;
            }
            if (parseFloat(qtyValue) <= 0) {
                hasError = true;
                alert('La cantidad para el artículo debe ser mayor a 0 para poder solicitarse.');
                qtyInputs[i].focus();
                break;
            }
            data.push({
                idSupply: qtyInputs[i].getAttribute('data-id'),
                qtyRequested: qtyValue,
                idSupplySurplus: qtyInputs[i].getAttribute('data-surplus')
            });
        }
        if (!hasError) {
            var empNumber = $("#txtEmpNumber").val();
            var cc = '';
            var inputElement = document.getElementById('txtCc');
            var selectedValue = inputElement.value;

            // Buscar el centro de costo seleccionado
            var selectedCostCenter = null;
            if (window.selectedCostCenterIndex >= 0 && window.filteredCostCentersData && window.filteredCostCentersData.length > 0) {
                selectedCostCenter = window.filteredCostCentersData[window.selectedCostCenterIndex];
            } else {
                selectedCostCenter = window.costCentersData.find(function(item) {
                    return item.displayValue.trim().toLowerCase() === selectedValue.trim().toLowerCase();
                });
            }

            var voucherType = @ViewBag.voucherType;
            if (!selectedCostCenter) {
                inputElement.value = null;
                document.getElementById("msg").innerHTML = '*Este centro de costo no existe, favor de seleccionar uno de los que se muestran en la lista';
            } else {
                cc = selectedCostCenter.id;
                $.ajax({
                    url: '/Voucher/Create',
                    method: "post",
                    data: { cc: cc, empNumber: empNumber, lstVD: data, rawMaterial: voucherType },
                    success: function (data) {
                        $("#Body").html(data.msg);
                        window.scrollTo({
                            top: 0, behavior: "smooth"
                        });
                        if (data.idVoucher > 0){
                            window.location.href = data.redirectUrl;
                        } else {
                            $('#btnCreate').removeClass('disabled');
                        }

                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log("Status: " + textStatus);
                        console.log("Error: " + errorThrown);
                    }
                });
            }
        }
    }

    // Event listeners para Centro de Costo
    $("#txtCc").on('keyup', function (e) {
        if (e.key === 'Enter' || e.keyCode === 13) {
            if (window.selectedCostCenterIndex >= 0 && window.filteredCostCentersData && window.filteredCostCentersData.length > 0) {
                selectCostCenter(window.selectedCostCenterIndex);
            }
        } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            navigateCostCenterDropdown('down');
        } else if (e.key === 'ArrowUp') {
            e.preventDefault();
            navigateCostCenterDropdown('up');
        } else if (e.key === 'Escape') {
            document.getElementById("costCentersDropdown").style.display = 'none';
            window.selectedCostCenterIndex = -1;
        } else {
            filterCostCenters(this.value);
        }
    });

    // Event listeners para Suministros
    $("#txtSupply").on('keyup', function (e) {
        if (e.key === 'Enter' || e.keyCode === 13) {
            if (window.selectedSupplyIndex >= 0 && window.filteredSuppliesData && window.filteredSuppliesData.length > 0) {
                var selectedItem = window.filteredSuppliesData[window.selectedSupplyIndex];
                selectSupply(window.selectedSupplyIndex);
            }
            AddRow();
        } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            navigateDropdown('down');
        } else if (e.key === 'ArrowUp') {
            e.preventDefault();
            navigateDropdown('up');
        } else if (e.key === 'Escape') {
            document.getElementById("suppliesDropdown").style.display = 'none';
            window.selectedSupplyIndex = -1;
        } else {
            filterSupplies(this.value);
        }
    });

    // Cerrar dropdowns al hacer clic fuera
    $(document).on('click', function(e) {
        if (!$(e.target).closest('.custom-dropdown').length) {
            document.getElementById("suppliesDropdown").style.display = 'none';
            document.getElementById("costCentersDropdown").style.display = 'none';
            window.selectedSupplyIndex = -1;
            window.selectedCostCenterIndex = -1;
        }
    });

    $("#txtEmpNumber").on('keyup', function (e) {
        if (e.key === 'Enter' || e.keyCode === 13) {
            GetNameWorker();
        }
        if ($("#txtEmpNumber").val().length > 0 && ($("#txtName").val().length == 0 || $("#txtName").val() == "Número de empleado incorrecto o no existe")) {
            $('#btnCreate').addClass('disabled');
        } else {
            $('#btnCreate').removeClass('disabled');
        }
    });

    function ClearName() {
        document.getElementById("txtEmpNumber").value = null;
        document.getElementById("txtName").value = null;
        $('#btnCreate').removeClass('disabled');
    }

    function GetNameWorker() {
        var empNumber = $("#txtEmpNumber").val();
        $.ajax({
            url: '/Worker/GetWorkerName',
            method: "post",
            data: { empNumber: empNumber },
            success: function (data) {
                $('#txtName').val(data);
                $('#txtName').focus();
                if ($("#txtName").val() != "Número de empleado incorrecto o no existe") {
                    $('#btnCreate').removeClass('disabled');
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Status: " + textStatus);
                console.log("Error: " + errorThrown);
            }
        });
    }
</script>